name: Weekly Backtest

on:
  schedule:
    - cron: '0 12 * * 0'  # Runs every Sunday at 12pm UTC (8am ET)
  workflow_dispatch:

jobs:
  backtest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history for rebase

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run backtest
        run: |
          python jobs/backtest.py || echo "Backtest completed with warnings"

      - name: Check if results exist
        id: check_files
        run: |
          if [ -f "data/backtest_results.csv" ]; then
            echo "results_exist=true" >> $GITHUB_OUTPUT
          else
            echo "results_exist=false" >> $GITHUB_OUTPUT
            echo "No backtest results generated - likely insufficient history"
          fi

      - name: Generate visualizations
        if: steps.check_files.outputs.results_exist == 'true'
        run: |
          python jobs/visualize.py || echo "Visualization completed with warnings"

      - name: Send weekly performance email
        if: steps.check_files.outputs.results_exist == 'true'
        env:
          GMAIL_USER: ${{ secrets.GMAIL_USER }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
          RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
        run: |
          python jobs/weekly_summary.py || echo "Weekly summary completed with warnings"

      - name: Commit and push backtest results to main
        if: steps.check_files.outputs.results_exist == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Explicitly add ignored files
          git add -f data/backtest_results.csv data/plots/*.png 2>/dev/null || true

          git commit -m "Weekly backtest update: $(date +'%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"

          # Rebase on latest main to prevent merge issues
          git pull --rebase origin main || true

          # Push changes back to main
          git push origin HEAD:main
